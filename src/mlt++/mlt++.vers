MLTPP_0.8.8 {
  global:
    extern "C++" {
      "Mlt::ClipInfo::~ClipInfo()";
      "Mlt::ClipInfo::ClipInfo()";
      "Mlt::ClipInfo::ClipInfo(mlt_playlist_clip_info*)";
      "Mlt::ClipInfo::update(mlt_playlist_clip_info*)";
      "typeinfo for Mlt::Consumer";
      "typeinfo name for Mlt::Consumer";
      "vtable for Mlt::Consumer";
      "Mlt::Consumer::connect(Mlt::Service&)";
      "Mlt::Consumer::~Consumer()";
      "Mlt::Consumer::Consumer()";
      "Mlt::Consumer::Consumer(Mlt::Consumer&)";
      "Mlt::Consumer::Consumer(mlt_consumer_s*)";
      "Mlt::Consumer::Consumer(Mlt::Profile&)";
      "Mlt::Consumer::Consumer(Mlt::Profile&, char const*, char const*)";
      "Mlt::Consumer::Consumer(Mlt::Service&)";
      "Mlt::Consumer::get_consumer()";
      "Mlt::Consumer::get_service()";
      "Mlt::Consumer::is_stopped()";
      "Mlt::Consumer::position()";
      "Mlt::Consumer::purge()";
      "Mlt::Consumer::run()";
      "Mlt::Consumer::start()";
      "Mlt::Consumer::stop()";
      "Mlt::Deque::count()";
      "Mlt::Deque::~Deque()";
      "Mlt::Deque::Deque()";
      "Mlt::Deque::peek_back()";
      "Mlt::Deque::peek_front()";
      "Mlt::Deque::pop_back()";
      "Mlt::Deque::pop_front()";
      "Mlt::Deque::push_back(void*)";
      "Mlt::Deque::push_front(void*)";
      "Mlt::Event::block()";
      "Mlt::Event::~Event()";
      "Mlt::Event::Event(Mlt::Event&)";
      "Mlt::Event::Event(mlt_event_struct*)";
      "Mlt::Event::get_event()";
      "Mlt::Event::is_valid()";
      "Mlt::Event::unblock()";
      "Mlt::Factory::close()";
      "Mlt::Factory::consumer(Mlt::Profile&, char*, char*)";
      "Mlt::Factory::event_object()";
      "Mlt::Factory::filter(Mlt::Profile&, char*, char*)";
      "Mlt::Factory::init(char const*)";
      "Mlt::Factory::producer(Mlt::Profile&, char*, char*)";
      "Mlt::Factory::transition(Mlt::Profile&, char*, char*)";
      "typeinfo for Mlt::Field";
      "typeinfo name for Mlt::Field";
      "vtable for Mlt::Field";
      "Mlt::Field::disconnect_service(Mlt::Service&)";
      "Mlt::Field::~Field()";
      "Mlt::Field::Field(Mlt::Field&)";
      "Mlt::Field::Field(mlt_field_s*)";
      "Mlt::Field::get_field()";
      "Mlt::Field::get_service()";
      "Mlt::Field::plant_filter(Mlt::Filter&, int)";
      "Mlt::Field::plant_transition(Mlt::Transition&, int, int)";
      "typeinfo for Mlt::FilteredConsumer";
      "typeinfo name for Mlt::FilteredConsumer";
      "vtable for Mlt::FilteredConsumer";
      "Mlt::FilteredConsumer::attach(Mlt::Filter&)";
      "Mlt::FilteredConsumer::connect(Mlt::Service&)";
      "Mlt::FilteredConsumer::detach(Mlt::Filter&)";
      "Mlt::FilteredConsumer::~FilteredConsumer()";
      "Mlt::FilteredConsumer::FilteredConsumer(Mlt::Consumer&)";
      "Mlt::FilteredConsumer::FilteredConsumer(Mlt::Profile&, char const*, char const*)";
      "Mlt::FilteredConsumer::last(Mlt::Filter&)";
      "typeinfo for Mlt::FilteredProducer";
      "typeinfo name for Mlt::FilteredProducer";
      "vtable for Mlt::FilteredProducer";
      "Mlt::FilteredProducer::attach(Mlt::Filter&)";
      "Mlt::FilteredProducer::detach(Mlt::Filter&)";
      "Mlt::FilteredProducer::~FilteredProducer()";
      "Mlt::FilteredProducer::FilteredProducer(Mlt::Profile&, char const*, char const*)";
      "typeinfo for Mlt::Filter";
      "typeinfo name for Mlt::Filter";
      "vtable for Mlt::Filter";
      "Mlt::Filter::connect(Mlt::Service&, int)";
      "Mlt::Filter::~Filter()";
      "Mlt::Filter::Filter(Mlt::Filter&)";
      "Mlt::Filter::Filter(mlt_filter_s*)";
      "Mlt::Filter::Filter(Mlt::Profile&, char const*, char const*)";
      "Mlt::Filter::Filter(Mlt::Service&)";
      "Mlt::Filter::get_filter()";
      "Mlt::Filter::get_in()";
      "Mlt::Filter::get_length()";
      "Mlt::Filter::get_length2(Mlt::Frame&)";
      "Mlt::Filter::get_out()";
      "Mlt::Filter::get_position(Mlt::Frame&)";
      "Mlt::Filter::get_progress(Mlt::Frame&)";
      "Mlt::Filter::get_service()";
      "Mlt::Filter::get_track()";
      "Mlt::Filter::set_in_and_out(int, int)";
      "typeinfo for Mlt::Frame";
      "typeinfo name for Mlt::Frame";
      "vtable for Mlt::Frame";
      "Mlt::Frame::fetch_image(mlt_image_format, int, int, int)";
      "Mlt::Frame::~Frame()";
      "Mlt::Frame::Frame(Mlt::Frame&)";
      "Mlt::Frame::Frame(mlt_frame_s*)";
      "Mlt::Frame::get_audio(mlt_audio_format&, int&, int&, int&)";
      "Mlt::Frame::get_frame()";
      "Mlt::Frame::get_image(mlt_image_format&, int&, int&, int)";
      "Mlt::Frame::get_original_producer()";
      "Mlt::Frame::get_position()";
      "Mlt::Frame::get_properties()";
      "Mlt::Frame::get_unique_properties(Mlt::Service&)";
      "Mlt::Frame::get_waveform(int, int)";
      "Mlt::Frame::set_alpha(unsigned char*, int, void (*)(void*))";
      "Mlt::Frame::set_image(unsigned char*, int, void (*)(void*))";
      "Mlt::Geometry::fetch(Mlt::GeometryItem*, float)";
      "Mlt::Geometry::fetch(Mlt::GeometryItem&, float)";
      "Mlt::Geometry::~Geometry()";
      "Mlt::Geometry::Geometry(char*, int, int, int)";
      "Mlt::Geometry::insert(Mlt::GeometryItem*)";
      "Mlt::Geometry::insert(Mlt::GeometryItem&)";
      "Mlt::Geometry::interpolate()";
      "Mlt::Geometry::next_key(Mlt::GeometryItem*, int)";
      "Mlt::Geometry::next_key(Mlt::GeometryItem&, int)";
      "Mlt::Geometry::parse(char*, int, int, int)";
      "Mlt::Geometry::prev_key(Mlt::GeometryItem*, int)";
      "Mlt::Geometry::prev_key(Mlt::GeometryItem&, int)";
      "Mlt::Geometry::remove(int)";
      "Mlt::Geometry::serialise()";
      "Mlt::Geometry::serialise(int, int)";
      "typeinfo for Mlt::Multitrack";
      "typeinfo name for Mlt::Multitrack";
      "vtable for Mlt::Multitrack";
      "Mlt::Multitrack::clip(mlt_whence, int)";
      "Mlt::Multitrack::connect(Mlt::Producer&, int)";
      "Mlt::Multitrack::count()";
      "Mlt::Multitrack::get_multitrack()";
      "Mlt::Multitrack::get_producer()";
      "Mlt::Multitrack::~Multitrack()";
      "Mlt::Multitrack::Multitrack(Mlt::Multitrack&)";
      "Mlt::Multitrack::Multitrack(mlt_multitrack_s*)";
      "Mlt::Multitrack::Multitrack(Mlt::Service&)";
      "Mlt::Multitrack::refresh()";
      "Mlt::Multitrack::track(int)";
      "typeinfo for Mlt::Parser";
      "typeinfo name for Mlt::Parser";
      "vtable for Mlt::Parser";
      "Mlt::Parser::get_properties()";
      "Mlt::Parser::on_end_filter(Mlt::Filter*)";
      "Mlt::Parser::on_end_multitrack(Mlt::Multitrack*)";
      "Mlt::Parser::on_end_playlist(Mlt::Playlist*)";
      "Mlt::Parser::on_end_producer(Mlt::Producer*)";
      "Mlt::Parser::on_end_track()";
      "Mlt::Parser::on_end_tractor(Mlt::Tractor*)";
      "Mlt::Parser::on_end_transition(Mlt::Transition*)";
      "Mlt::Parser::on_invalid(Mlt::Service*)";
      "Mlt::Parser::on_start_filter(Mlt::Filter*)";
      "Mlt::Parser::on_start_multitrack(Mlt::Multitrack*)";
      "Mlt::Parser::on_start_playlist(Mlt::Playlist*)";
      "Mlt::Parser::on_start_producer(Mlt::Producer*)";
      "Mlt::Parser::on_start_track()";
      "Mlt::Parser::on_start_tractor(Mlt::Tractor*)";
      "Mlt::Parser::on_start_transition(Mlt::Transition*)";
      "Mlt::Parser::on_unknown(Mlt::Service*)";
      "Mlt::Parser::~Parser()";
      "Mlt::Parser::Parser()";
      "Mlt::Parser::start(Mlt::Service&)";
      "typeinfo for Mlt::Playlist";
      "typeinfo name for Mlt::Playlist";
      "vtable for Mlt::Playlist";
      "Mlt::Playlist::append(Mlt::Producer&, int, int)";
      "Mlt::Playlist::blank(char const*)";
      "Mlt::Playlist::blank(int)";
      "Mlt::Playlist::blanks_from(int, int)";
      "Mlt::Playlist::clear()";
      "Mlt::Playlist::clip_info(int, Mlt::ClipInfo*)";
      "Mlt::Playlist::clip_length(int)";
      "Mlt::Playlist::clip(mlt_whence, int)";
      "Mlt::Playlist::clip_start(int)";
      "Mlt::Playlist::consolidate_blanks(int)";
      "Mlt::Playlist::count()";
      "Mlt::Playlist::current()";
      "Mlt::Playlist::current_clip()";
      "Mlt::Playlist::delete_clip_info(Mlt::ClipInfo*)";
      "Mlt::Playlist::get_clip_at(int)";
      "Mlt::Playlist::get_clip_index_at(int)";
      "Mlt::Playlist::get_clip(int)";
      "Mlt::Playlist::get_playlist()";
      "Mlt::Playlist::get_producer()";
      "Mlt::Playlist::insert_at(int, Mlt::Producer*, int)";
      "Mlt::Playlist::insert_at(int, Mlt::Producer&, int)";
      "Mlt::Playlist::insert_blank(int, int)";
      "Mlt::Playlist::insert(Mlt::Producer&, int, int, int)";
      "Mlt::Playlist::is_blank_at(int)";
      "Mlt::Playlist::is_blank(int)";
      "Mlt::Playlist::is_mix(int)";
      "Mlt::Playlist::join(int, int, int)";
      "Mlt::Playlist::mix_add(int, Mlt::Transition*)";
      "Mlt::Playlist::mix(int, int, Mlt::Transition*)";
      "Mlt::Playlist::move(int, int)";
      "Mlt::Playlist::move_region(int, int, int)";
      "Mlt::Playlist::pad_blanks(int, int, int)";
      "Mlt::Playlist::~Playlist()";
      "Mlt::Playlist::Playlist()";
      "Mlt::Playlist::Playlist(Mlt::Playlist&)";
      "Mlt::Playlist::Playlist(mlt_playlist_s*)";
      "Mlt::Playlist::Playlist(Mlt::Profile&)";
      "Mlt::Playlist::Playlist(Mlt::Service&)";
      "Mlt::Playlist::remove(int)";
      "Mlt::Playlist::remove_region(int, int)";
      "Mlt::Playlist::repeat(int, int)";
      "Mlt::Playlist::replace_with_blank(int)";
      "Mlt::Playlist::resize_clip(int, int, int)";
      "Mlt::Playlist::split_at(int, bool)";
      "Mlt::Playlist::split(int, int)";
      "typeinfo for Mlt::Producer";
      "typeinfo name for Mlt::Producer";
      "vtable for Mlt::Producer";
      "Mlt::Producer::clear()";
      "Mlt::Producer::cut(int, int)";
      "Mlt::Producer::frame()";
      "Mlt::Producer::frame_time(mlt_time_format)";
      "Mlt::Producer::get_fps()";
      "Mlt::Producer::get_in()";
      "Mlt::Producer::get_length()";
      "Mlt::Producer::get_length_time(mlt_time_format)";
      "Mlt::Producer::get_out()";
      "Mlt::Producer::get_parent()";
      "Mlt::Producer::get_playtime()";
      "Mlt::Producer::get_producer()";
      "Mlt::Producer::get_service()";
      "Mlt::Producer::get_speed()";
      "Mlt::Producer::is_blank()";
      "Mlt::Producer::is_cut()";
      "Mlt::Producer::optimise()";
      "Mlt::Producer::parent()";
      "Mlt::Producer::pause()";
      "Mlt::Producer::position()";
      "Mlt::Producer::~Producer()";
      "Mlt::Producer::Producer()";
      "Mlt::Producer::Producer(Mlt::Producer*)";
      "Mlt::Producer::Producer(Mlt::Producer&)";
      "Mlt::Producer::Producer(mlt_producer_s*)";
      "Mlt::Producer::Producer(Mlt::Profile&, char const*, char const*)";
      "Mlt::Producer::Producer(Mlt::Service&)";
      "Mlt::Producer::runs_into(Mlt::Producer&)";
      "Mlt::Producer::same_clip(Mlt::Producer&)";
      "Mlt::Producer::seek(char const*)";
      "Mlt::Producer::seek(int)";
      "Mlt::Producer::set_in_and_out(int, int)";
      "Mlt::Producer::set_speed(double)";
      "Mlt::Profile::colorspace() const";
      "Mlt::Profile::dar() const";
      "Mlt::Profile::description() const";
      "Mlt::Profile::display_aspect_den() const";
      "Mlt::Profile::display_aspect_num() const";
      "Mlt::Profile::fps() const";
      "Mlt::Profile::frame_rate_den() const";
      "Mlt::Profile::frame_rate_num() const";
      "Mlt::Profile::from_producer(Mlt::Producer&)";
      "Mlt::Profile::get_profile() const";
      "Mlt::Profile::height() const";
      "Mlt::Profile::is_explicit() const";
      "Mlt::Profile::list()";
      "Mlt::Profile::~Profile()";
      "Mlt::Profile::Profile()";
      "Mlt::Profile::Profile(char const*)";
      "Mlt::Profile::Profile(mlt_profile_s*)";
      "Mlt::Profile::Profile(Mlt::Properties&)";
      "Mlt::Profile::progressive() const";
      "Mlt::Profile::sample_aspect_den() const";
      "Mlt::Profile::sample_aspect_num() const";
      "Mlt::Profile::sar() const";
      "Mlt::Profile::set_colorspace(int)";
      "Mlt::Profile::set_explicit(int)";
      "Mlt::Profile::set_frame_rate(int, int)";
      "Mlt::Profile::set_height(int)";
      "Mlt::Profile::set_progressive(int)";
      "Mlt::Profile::set_sample_aspect(int, int)";
      "Mlt::Profile::set_width(int)";
      "Mlt::Profile::width() const";
      "typeinfo for Mlt::Properties";
      "typeinfo name for Mlt::Properties";
      "vtable for Mlt::Properties";
      "Mlt::Properties::block(void*)";
      "Mlt::Properties::count()";
      "Mlt::Properties::debug(char const*, _IO_FILE*)";
      "Mlt::Properties::dec_ref()";
      "Mlt::Properties::delete_event(Mlt::Event*)";
      "Mlt::Properties::dump(_IO_FILE*)";
      "Mlt::Properties::fire_event(char const*)";
      "Mlt::Properties::get(char const*)";
      "Mlt::Properties::get_data(char const*)";
      "Mlt::Properties::get_data(char const*, int&)";
      "Mlt::Properties::get_data(int, int&)";
      "Mlt::Properties::get_double(char const*)";
      "Mlt::Properties::get(int)";
      "Mlt::Properties::get_int64(char const*)";
      "Mlt::Properties::get_int(char const*)";
      "Mlt::Properties::get_lcnumeric()";
      "Mlt::Properties::get_name(int)";
      "Mlt::Properties::get_properties()";
      "Mlt::Properties::get_time(char const*, mlt_time_format)";
      "Mlt::Properties::inc_ref()";
      "Mlt::Properties::inherit(Mlt::Properties&)";
      "Mlt::Properties::is_sequence()";
      "Mlt::Properties::is_valid()";
      "Mlt::Properties::listen(char const*, void*, void (*)(void*, ...))";
      "Mlt::Properties::load(char const*)";
      "Mlt::Properties::lock()";
      "Mlt::Properties::mirror(Mlt::Properties&)";
      "Mlt::Properties::parse(char const*)";
      "Mlt::Properties::parse_yaml(char const*)";
      "Mlt::Properties::pass_list(Mlt::Properties&, char const*)";
      "Mlt::Properties::pass_property(Mlt::Properties&, char const*)";
      "Mlt::Properties::pass_values(Mlt::Properties&, char const*)";
      "Mlt::Properties::preset(char const*)";
      "Mlt::Properties::~Properties()";
      "Mlt::Properties::Properties()";
      "Mlt::Properties::Properties(bool)";
      "Mlt::Properties::Properties(char const*)";
      "Mlt::Properties::Properties(Mlt::Properties&)";
      "Mlt::Properties::Properties(mlt_properties_s*)";
      "Mlt::Properties::Properties(void*)";
      "Mlt::Properties::ref_count()";
      "Mlt::Properties::rename(char const*, char const*)";
      "Mlt::Properties::save(char const*)";
      "Mlt::Properties::serialise_yaml()";
      "Mlt::Properties::set(char const*, char const*)";
      "Mlt::Properties::set(char const*, double)";
      "Mlt::Properties::set(char const*, int)";
      "Mlt::Properties::set(char const*, long)";
      "Mlt::Properties::set(char const*, void*, int, void (*)(void*), char* (*)(void*, int))";
      "Mlt::Properties::set_lcnumeric(char const*)";
      "Mlt::Properties::setup_wait_for(char const*)";
      "Mlt::Properties::unblock(void*)";
      "Mlt::Properties::unlock()";
      "Mlt::Properties::wait_for(char const*)";
      "Mlt::Properties::wait_for(Mlt::Event*, bool)";
      "typeinfo for Mlt::PushConsumer";
      "typeinfo name for Mlt::PushConsumer";
      "vtable for Mlt::PushConsumer";
      "Mlt::PushConsumer::connect(Mlt::Service&)";
      "Mlt::PushConsumer::construct(int)";
      "Mlt::PushConsumer::drain()";
      "Mlt::PushConsumer::~PushConsumer()";
      "Mlt::PushConsumer::PushConsumer(Mlt::Profile&, char const*, char const*)";
      "Mlt::PushConsumer::push(Mlt::Frame*)";
      "Mlt::PushConsumer::push(Mlt::Frame&)";
      "Mlt::PushConsumer::set_render(int, int, double)";
      "Mlt::Repository::consumers() const";
      "Mlt::Repository::create(Mlt::Profile&, mlt_service_type, char const*, void*)";
      "Mlt::Repository::filters() const";
      "Mlt::Repository::languages() const";
      "Mlt::Repository::metadata(mlt_service_type, char const*) const";
      "Mlt::Repository::presets()";
      "Mlt::Repository::producers() const";
      "Mlt::Repository::register_metadata(mlt_service_type, char const*, mlt_properties_s* (*)(mlt_service_type, char const*, void*), void*)";
      "Mlt::Repository::register_service(mlt_service_type, char const*, void* (*)(mlt_profile_s*, mlt_service_type, char const*, void const*))";
      "Mlt::Repository::~Repository()";
      "Mlt::Repository::Repository(char const*)";
      "Mlt::Repository::Repository(mlt_repository_s*)";
      "Mlt::Repository::transitions() const";
      "typeinfo for Mlt::Service";
      "typeinfo name for Mlt::Service";
      "vtable for Mlt::Service";
      "Mlt::Service::attach(Mlt::Filter&)";
      "Mlt::Service::connect_producer(Mlt::Service&, int)";
      "Mlt::Service::consumer()";
      "Mlt::Service::detach(Mlt::Filter&)";
      "Mlt::Service::filter(int)";
      "Mlt::Service::get_frame(int)";
      "Mlt::Service::get_profile()";
      "Mlt::Service::get_properties()";
      "Mlt::Service::get_service()";
      "Mlt::Service::lock()";
      "Mlt::Service::producer()";
      "Mlt::Service::profile()";
      "Mlt::Service::~Service()";
      "Mlt::Service::Service()";
      "Mlt::Service::Service(Mlt::Service&)";
      "Mlt::Service::Service(mlt_service_s*)";
      "Mlt::Service::set_profile(Mlt::Profile&)";
      "Mlt::Service::type()";
      "Mlt::Service::unlock()";
      "Mlt::Tokeniser::count()";
      "Mlt::Tokeniser::get(int)";
      "Mlt::Tokeniser::input()";
      "Mlt::Tokeniser::parse(char*, char*)";
      "Mlt::Tokeniser::~Tokeniser()";
      "Mlt::Tokeniser::Tokeniser(char*, char*)";
      "typeinfo for Mlt::Tractor";
      "typeinfo name for Mlt::Tractor";
      "vtable for Mlt::Tractor";
      "Mlt::Tractor::connect(Mlt::Producer&)";
      "Mlt::Tractor::count()";
      "Mlt::Tractor::field()";
      "Mlt::Tractor::get_producer()";
      "Mlt::Tractor::get_tractor()";
      "Mlt::Tractor::locate_cut(Mlt::Producer*, int&, int&)";
      "Mlt::Tractor::multitrack()";
      "Mlt::Tractor::plant_filter(Mlt::Filter*, int)";
      "Mlt::Tractor::plant_filter(Mlt::Filter&, int)";
      "Mlt::Tractor::plant_transition(Mlt::Transition*, int, int)";
      "Mlt::Tractor::plant_transition(Mlt::Transition&, int, int)";
      "Mlt::Tractor::refresh()";
      "Mlt::Tractor::set_track(Mlt::Producer&, int)";
      "Mlt::Tractor::track(int)";
      "Mlt::Tractor::~Tractor()";
      "Mlt::Tractor::Tractor()";
      "Mlt::Tractor::Tractor(Mlt::Profile&, char*, char*)";
      "Mlt::Tractor::Tractor(Mlt::Service&)";
      "Mlt::Tractor::Tractor(Mlt::Tractor&)";
      "Mlt::Tractor::Tractor(mlt_tractor_s*)";
      "typeinfo for Mlt::Transition";
      "typeinfo name for Mlt::Transition";
      "vtable for Mlt::Transition";
      "Mlt::Transition::connect(Mlt::Producer&, int, int)";
      "Mlt::Transition::get_a_track()";
      "Mlt::Transition::get_b_track()";
      "Mlt::Transition::get_in()";
      "Mlt::Transition::get_length()";
      "Mlt::Transition::get_out()";
      "Mlt::Transition::get_position(Mlt::Frame&)";
      "Mlt::Transition::get_progress_delta(Mlt::Frame&)";
      "Mlt::Transition::get_progress(Mlt::Frame&)";
      "Mlt::Transition::get_service()";
      "Mlt::Transition::get_transition()";
      "Mlt::Transition::set_in_and_out(int, int)";
      "Mlt::Transition::~Transition()";
      "Mlt::Transition::Transition(Mlt::Profile&, char const*, char const*)";
      "Mlt::Transition::Transition(Mlt::Service&)";
      "Mlt::Transition::Transition(Mlt::Transition&)";
      "Mlt::Transition::Transition(mlt_transition_s*)";
    };

  local: *;
};
