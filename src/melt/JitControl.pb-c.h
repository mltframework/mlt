/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: JitControl.proto */

#ifndef PROTOBUF_C_JitControl_2eproto__INCLUDED
#define PROTOBUF_C_JitControl_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _JitControl JitControl;


/* --- enums --- */

typedef enum _ControlType {
  CONTROL_TYPE__PAUSE = 0,
  CONTROL_TYPE__PLAY = 1,
  CONTROL_TYPE__PLAY_RATE = 2,
  CONTROL_TYPE__QUIT = 3,
  CONTROL_TYPE__SEEK = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CONTROL_TYPE)
} ControlType;

/* --- messages --- */

struct  _JitControl
{
  ProtobufCMessage base;
  protobuf_c_boolean has_type;
  ControlType type;
  protobuf_c_boolean has_play_rate;
  int32_t play_rate;
  protobuf_c_boolean has_seek_position;
  int64_t seek_position;
};
#define JIT_CONTROL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&jit_control__descriptor) \
    , 0, CONTROL_TYPE__PAUSE, 0, 0, 0, 0 }


/* JitControl methods */
void   jit_control__init
                     (JitControl         *message);
size_t jit_control__get_packed_size
                     (const JitControl   *message);
size_t jit_control__pack
                     (const JitControl   *message,
                      uint8_t             *out);
size_t jit_control__pack_to_buffer
                     (const JitControl   *message,
                      ProtobufCBuffer     *buffer);
JitControl *
       jit_control__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   jit_control__free_unpacked
                     (JitControl *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*JitControl_Closure)
                 (const JitControl *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    control_type__descriptor;
extern const ProtobufCMessageDescriptor jit_control__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_JitControl_2eproto__INCLUDED */
