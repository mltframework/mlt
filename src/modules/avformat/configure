#!/bin/sh

# Determine whether to recommend/use the HEAD revision of FFmpeg (unreleased)
# or a specific revision based upon whether the last digit of our version
# is even or odd. An odd MLT version number always represents unreleased.
ffmpeg_ver="1.2"
libav_ver="0.8.7"
micro_version=$(echo $version | cut -d . -f 3)
odd_version=$(($micro_version % 2))
[ "$odd_version" -eq "1" ] && ffmpeg_ver="HEAD" && libav_ver="HEAD"

if [ "$help" = "1" ]
then
	cat << EOF
FFmpeg/avformat options:

  --avformat-shared=path  - Link against a shared installation of libavformat (default)
  --avformat-static=path  - Link against a static build of libavformat
  --avformat-ldextra=libs - Provide additional libs to link with
  --avformat-suffix=suff  - Specify a custom suffix
  --avformat-no-codecs    - Disable the producer and consumer to avoid the codecs
  --avformat-no-filters   - Disable the filters to make a codecs+muxers-only plugin
  --avformat-no-devices   - Disable support for libavdevice
  --avformat-vdpau        - Enable support for NVIDIA VDPAU

  NOTE: The recommended version of FFmpeg is $ffmpeg_ver or libav $libav_ver.

EOF

else
	targetos=$(uname -s)
	case $targetos in
	Darwin)
		export LIBSUF=.dylib
		;;
	Linux|FreeBSD|NetBSD)
		export LIBSUF=.so
		;;
	*)
		;;
	esac
		
	bits=$(uname -m)
	case $bits in
	x86_64)
		[ -d /usr/lib/lib64 ] && export LIBDIR=lib64 || export LIBDIR=lib
		;;
	*)
		export LIBDIR=lib
		;;
	esac

	echo > config.mak

	export static_ffmpeg=
	export shared_ffmpeg=
	export extra_libs=
	export avformat_suffix=
	export codecs=true
	export filters=true
	export devices=true
	export vdpau=false
	${PKG_CONFIG} x11 > /dev/null 2>&1
	export x11=$?

	for i in "$@"
	do
		case $i in
			--avformat-static=* )	static_ffmpeg="${i#--avformat-static=}" ;;
			--avformat-shared=* )	shared_ffmpeg="${i#--avformat-shared=}" ;;
			--avformat-ldextra=* )	extra_libs="${i#--avformat-ldextra=}" ;;
			--avformat-suffix=* )	avformat_suffix="${i#--avformat-suffix=}" ;;
			--avformat-no-codecs )	codecs=false ;;
			--avformat-no-filters )	filters=false ;;
			--avformat-no-devices )	devices=false ;;
			--avformat-no-vdpau )   vdpau=false ;;
			--avformat-vdpau )      vdpau=true ;;
		esac
	done

	: ${shared_ffmpeg:=$(${PKG_CONFIG} --variable=prefix libavformat${avformat_suffix})}

	if [ "$static_ffmpeg" != "" ]
	then 
		if [ -d "$static_ffmpeg" ]
		then
			echo "CFLAGS+=-DAVDATADIR=\\\"${static_ffmpeg}/ffpresets/\\\"" >> config.mak
			echo "CFLAGS+=-I$static_ffmpeg" >> config.mak
			echo "LDFLAGS+=-L$static_ffmpeg/libavformat -L$static_ffmpeg/libavcodec -L$static_ffmpeg/libavutil" >> config.mak
			echo "LDFLAGS+=-L$static_ffmpeg/libswscale" >> config.mak
			[ $targetos = "Darwin" ] &&
			 	echo "LDFLAGS+=-single_module" >> config.mak
			if [ "$devices" = "true" ]
			then
				echo "LDFLAGS+=-L$static_ffmpeg/libavdevice" >> config.mak
			fi
			echo "LDFLAGS+=-Wl,-Bsymbolic" >> config.mak
			extra_libs="$extra_libs -lm -lz -lbz2"
			
			if [ "$vdpau" = "true" ]
			then
				printf "#include <libavcodec/vdpau.h>\n int main(){ VdpBitstreamBuffer test; test.struct_version; return 0;}" | $CC -I"$static_ffmpeg" $CFLAGS -c -x c -  >/dev/null 2>&1
				[ "$x11" = "0" -a "$?" = "0" ] && echo "VDPAU=1" >> config.mak
			fi
		else
			echo "avformat: Invalid path specified: $static_ffmpeg"
			touch ../disable-avformat
			echo 0
		fi
	elif [ "$shared_ffmpeg" != "" ]
	then
		if ! $(${PKG_CONFIG} libswscale${avformat_suffix}); then
			echo "- libswscale not found: disabling"
			touch ../disable-avformat
			exit 0
		fi
		echo "PREFIX=$shared_ffmpeg" >> config.mak
		case $targetos in
			MINGW32_NT-*)
				echo "CFLAGS+=-DAVDATADIR=\\\"share/ffmpeg/\\\"" >> config.mak
			;;
			*)
				echo "CFLAGS+=-DAVDATADIR=\\\"${shared_ffmpeg}/share/ffmpeg${avformat_suffix}/\\\"" >> config.mak
			;;
		esac
                echo "CFLAGS+=$(${PKG_CONFIG} --cflags libavcodec${avformat_suffix})" >> config.mak
                echo "LDFLAGS+=$(${PKG_CONFIG} --libs libavcodec${avformat_suffix})" >> config.mak
                echo "CFLAGS+=$(${PKG_CONFIG} --cflags libavutil${avformat_suffix})" >> config.mak
                echo "LDFLAGS+=$(${PKG_CONFIG} --libs libavutil${avformat_suffix})" >> config.mak
                echo "CFLAGS+=$(${PKG_CONFIG} --cflags libavformat${avformat_suffix})" >> config.mak
                echo "LDFLAGS+=$(${PKG_CONFIG} --libs libavformat${avformat_suffix})" >> config.mak
		echo "CFLAGS+=$(${PKG_CONFIG} --cflags libswscale${avformat_suffix})" >> config.mak
                echo "LDFLAGS+=$(${PKG_CONFIG} --libs libswscale${avformat_suffix})" >> config.mak
		if [ "$devices" = "true" ]
		then
			if ! $(${PKG_CONFIG} libavdevice${avformat_suffix}); then
				echo "- libavdevice not found: disabling"
				touch ../disable-avformat
				exit 0
			fi
			echo "CFLAGS+=$(${PKG_CONFIG} --cflags libavdevice${avformat_suffix})" >> config.mak
                        echo "LDFLAGS+=$(${PKG_CONFIG} --libs libavdevice${avformat_suffix})" >> config.mak
		fi
		
		if [ "$vdpau" = "true" ]
		then
			printf "#include <libavcodec/vdpau.h>\n int main(){ VdpBitstreamBuffer test; test.struct_version; return 0;}" | $CC $(${PKG_CONFIG} --cflags libavformat${avformat_suffix}) -I"$shared_ffmpeg/include" $CFLAGS -c -x c -  >/dev/null 2>&1
			[ "$x11" = "0" -a "$?" = "0" ] && echo "VDPAU=1" >> config.mak
		fi
	else
		echo "- libavformat not found: disabling"
		touch ../disable-avformat
		exit 0
	fi

	echo "EXTRA_LIBS=$extra_libs" >> config.mak
        [ "$codecs" = "true" ] && echo "CODECS=1" >> config.mak
	[ "$filters" = "true" ] && echo "FILTERS=1" >> config.mak
	[ "$devices" = "true" ] && echo "DEVICES=1" >> config.mak
	exit 0

fi
